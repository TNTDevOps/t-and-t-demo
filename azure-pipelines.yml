# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - none
pr:
  - none

pool:
  name: 'CentOSAgent-TnT-Demo-Pool'

# Test Staging
stages:
- stage: Test_Staging
  displayName: Test Staging
  pool:
    vmImage: 'ubuntu-latest'
  jobs:
  - job: Test_Job
    displayName: Test Job
    steps:
    - checkout: self
    - script: echo 'SonarCube Result!'
      displayName: 'SonarCube Scan'

# Deploy to Staging
- stage: Deploy_Staging
  displayName: Deploy Staging
  # pool:
  #   vmImage: 'ubuntu-latest'
  jobs:
  - deployment: Deploy_Job
    displayName: Deploy Job
    environment: 'staging'
    strategy:
      runOnce:
        deploy:      
          steps:
          - checkout: self
          - checkout: git://t-and-t-demo/t-and-t-demo

          - task: SSH@0
            displayName: '1 Enable Maintenance'
            inputs:
              sshEndpoint: 'tnt-demo-ssh'
              runOptions: 'script'
              scriptPath: '$(Agent.BuildDirectory)/s/t-and-t-demo/deploy-scripts/1_enable_maintenance.sh'
              readyTimeout: '20000'
          - task: SSH@0
            displayName: '7 Check Page Status 200'
            inputs:
              sshEndpoint: 'tnt-demo-ssh'
              runOptions: 'script'
              scriptPath: '$(Agent.BuildDirectory)/s/t-and-t-demo/deploy-scripts/7_check_200.sh'
              args: 'https://www.tntnightmarket.biz'
              readyTimeout: '20000'

# Deploy to Production
- stage: Deploy_Production
  displayName: Deploy Production
  jobs:
  - deployment: Deploy_Job
    displayName: Deploy Job
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
            - checkout: git://t-and-t-demo/t-and-t-demo
            - script: echo 'Production Deployment Completed!'
              displayName: 'Production Deployment'